// Copyright (C) 2019 The XAYA developers
// Distributed under the MIT software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

syntax = "proto2";

package spacexpanse.proto;

/** An example BoardState proto for use in unit tests.  */
message TestBoardState
{

  /** The current value of a "global message", set by moves.  */
  optional string msg = 1;

  /** If this is set to true, then we mark the proto as invalid.  */
  optional bool invalid = 2;

  /**
   * If this field is set on two messages, then equality comparison is done
   * by comparing this field only.  This allows us to test both the default
   * proto-comparison equality and a custom equality function.
   */
  optional string only_compare_this = 3;

}

/** An example BoardMove proto for use in unit tests.  */
message TestBoardMove
{

  /** When applying this move, set current message to this value.  */
  optional string msg = 1;

}

/**
 * A message to test HasAnyUnknownFields.  This message contains various
 * fields, including repeated and non-repeated submessages.  We also define
 * another message below (ExtendedUnknownFieldTest), which has the same
 * structure but additional fields.  Those fields, when set, will become
 * unknown fields in this message.
 */
message UnknownFieldTest
{

  optional int32 single_int = 1;
  optional string single_str = 2;
  optional UnknownFieldTest single_msg = 3;

  repeated int32 repeated_int = 4;
  repeated string repeated_str = 5;
  repeated UnknownFieldTest repeated_msg = 6;

}

/**
 * A message with similar structure to UnknownFieldTest, except that it has
 * some more fields that will show up as unknown if a message of this type is
 * parsed as UnknownFieldTest.
 */
message ExtendedUnknownFieldTest
{

  /* These fields match UnknownFieldTest.  */
  optional int32 single_int = 1;
  optional string single_str = 2;
  optional ExtendedUnknownFieldTest single_msg = 3;

  repeated int32 repeated_int = 4;
  repeated string repeated_str = 5;
  repeated ExtendedUnknownFieldTest repeated_msg = 6;

  /* These fields are in addition to what UnknownFieldTest has.  */
  optional int32 unknown_int = 100;
  optional ExtendedUnknownFieldTest unknown_msg = 101;

  repeated int32 unknown_repeated_int = 102;
  repeated ExtendedUnknownFieldTest unknown_repeated_msg = 103;

}
